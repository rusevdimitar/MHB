#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MHB_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test01Db")]
	public partial class MyHomeBillsDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbActionLog(tbActionLog instance);
    partial void UpdatetbActionLog(tbActionLog instance);
    partial void DeletetbActionLog(tbActionLog instance);
    partial void InserttbUser(tbUser instance);
    partial void UpdatetbUser(tbUser instance);
    partial void DeletetbUser(tbUser instance);
    partial void InserttbControlType(tbControlType instance);
    partial void UpdatetbControlType(tbControlType instance);
    partial void DeletetbControlType(tbControlType instance);
    partial void InserttbCostCategory(tbCostCategory instance);
    partial void UpdatetbCostCategory(tbCostCategory instance);
    partial void DeletetbCostCategory(tbCostCategory instance);
    partial void InserttbCustomListItem(tbCustomListItem instance);
    partial void UpdatetbCustomListItem(tbCustomListItem instance);
    partial void DeletetbCustomListItem(tbCustomListItem instance);
    partial void InserttbCustomPageControl(tbCustomPageControl instance);
    partial void UpdatetbCustomPageControl(tbCustomPageControl instance);
    partial void DeletetbCustomPageControl(tbCustomPageControl instance);
    partial void InserttbDetailsTable01(tbDetailsTable01 instance);
    partial void UpdatetbDetailsTable01(tbDetailsTable01 instance);
    partial void DeletetbDetailsTable01(tbDetailsTable01 instance);
    partial void InserttbDetailsTable02(tbDetailsTable02 instance);
    partial void UpdatetbDetailsTable02(tbDetailsTable02 instance);
    partial void DeletetbDetailsTable02(tbDetailsTable02 instance);
    partial void InserttbDetailsTable03(tbDetailsTable03 instance);
    partial void UpdatetbDetailsTable03(tbDetailsTable03 instance);
    partial void DeletetbDetailsTable03(tbDetailsTable03 instance);
    partial void InserttbDetailsTable04(tbDetailsTable04 instance);
    partial void UpdatetbDetailsTable04(tbDetailsTable04 instance);
    partial void DeletetbDetailsTable04(tbDetailsTable04 instance);
    partial void InserttbDetailsTable05(tbDetailsTable05 instance);
    partial void UpdatetbDetailsTable05(tbDetailsTable05 instance);
    partial void DeletetbDetailsTable05(tbDetailsTable05 instance);
    partial void InserttbIncome(tbIncome instance);
    partial void UpdatetbIncome(tbIncome instance);
    partial void DeletetbIncome(tbIncome instance);
    partial void InserttbLanguage(tbLanguage instance);
    partial void UpdatetbLanguage(tbLanguage instance);
    partial void DeletetbLanguage(tbLanguage instance);
    partial void InserttbLanguage1(tbLanguage1 instance);
    partial void UpdatetbLanguage1(tbLanguage1 instance);
    partial void DeletetbLanguage1(tbLanguage1 instance);
    partial void InserttbLog(tbLog instance);
    partial void UpdatetbLog(tbLog instance);
    partial void DeletetbLog(tbLog instance);
    partial void InserttbMainTable01(tbMainTable01 instance);
    partial void UpdatetbMainTable01(tbMainTable01 instance);
    partial void DeletetbMainTable01(tbMainTable01 instance);
    partial void InserttbMainTable02(tbMainTable02 instance);
    partial void UpdatetbMainTable02(tbMainTable02 instance);
    partial void DeletetbMainTable02(tbMainTable02 instance);
    partial void InserttbMainTable03(tbMainTable03 instance);
    partial void UpdatetbMainTable03(tbMainTable03 instance);
    partial void DeletetbMainTable03(tbMainTable03 instance);
    partial void InserttbMainTable04(tbMainTable04 instance);
    partial void UpdatetbMainTable04(tbMainTable04 instance);
    partial void DeletetbMainTable04(tbMainTable04 instance);
    partial void InserttbMainTable05(tbMainTable05 instance);
    partial void UpdatetbMainTable05(tbMainTable05 instance);
    partial void DeletetbMainTable05(tbMainTable05 instance);
    partial void InserttbMonthlyBudget(tbMonthlyBudget instance);
    partial void UpdatetbMonthlyBudget(tbMonthlyBudget instance);
    partial void DeletetbMonthlyBudget(tbMonthlyBudget instance);
    partial void InserttbMonthlyExpense(tbMonthlyExpense instance);
    partial void UpdatetbMonthlyExpense(tbMonthlyExpense instance);
    partial void DeletetbMonthlyExpense(tbMonthlyExpense instance);
    partial void InserttbMonthlySaving(tbMonthlySaving instance);
    partial void UpdatetbMonthlySaving(tbMonthlySaving instance);
    partial void DeletetbMonthlySaving(tbMonthlySaving instance);
    partial void InserttbNote(tbNote instance);
    partial void UpdatetbNote(tbNote instance);
    partial void DeletetbNote(tbNote instance);
    #endregion
		
		public MyHomeBillsDbDataContext() : 
				base(global::MHB_DAL.Properties.Settings.Default.Test01DbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyHomeBillsDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyHomeBillsDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyHomeBillsDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyHomeBillsDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbActionLog> tbActionLogs
		{
			get
			{
				return this.GetTable<tbActionLog>();
			}
		}
		
		public System.Data.Linq.Table<tbUser> tbUsers
		{
			get
			{
				return this.GetTable<tbUser>();
			}
		}
		
		public System.Data.Linq.Table<tbControlType> tbControlTypes
		{
			get
			{
				return this.GetTable<tbControlType>();
			}
		}
		
		public System.Data.Linq.Table<tbCostCategory> tbCostCategories
		{
			get
			{
				return this.GetTable<tbCostCategory>();
			}
		}
		
		public System.Data.Linq.Table<tbCustomListItem> tbCustomListItems
		{
			get
			{
				return this.GetTable<tbCustomListItem>();
			}
		}
		
		public System.Data.Linq.Table<tbCustomPageControl> tbCustomPageControls
		{
			get
			{
				return this.GetTable<tbCustomPageControl>();
			}
		}
		
		public System.Data.Linq.Table<tbDetailsTable01> tbDetailsTable01s
		{
			get
			{
				return this.GetTable<tbDetailsTable01>();
			}
		}
		
		public System.Data.Linq.Table<tbDetailsTable02> tbDetailsTable02s
		{
			get
			{
				return this.GetTable<tbDetailsTable02>();
			}
		}
		
		public System.Data.Linq.Table<tbDetailsTable03> tbDetailsTable03s
		{
			get
			{
				return this.GetTable<tbDetailsTable03>();
			}
		}
		
		public System.Data.Linq.Table<tbDetailsTable04> tbDetailsTable04s
		{
			get
			{
				return this.GetTable<tbDetailsTable04>();
			}
		}
		
		public System.Data.Linq.Table<tbDetailsTable05> tbDetailsTable05s
		{
			get
			{
				return this.GetTable<tbDetailsTable05>();
			}
		}
		
		public System.Data.Linq.Table<tbIncome> tbIncomes
		{
			get
			{
				return this.GetTable<tbIncome>();
			}
		}
		
		public System.Data.Linq.Table<tbLanguage> tbLanguages
		{
			get
			{
				return this.GetTable<tbLanguage>();
			}
		}
		
		public System.Data.Linq.Table<tbLanguage1> tbLanguage1s
		{
			get
			{
				return this.GetTable<tbLanguage1>();
			}
		}
		
		public System.Data.Linq.Table<tbLog> tbLogs
		{
			get
			{
				return this.GetTable<tbLog>();
			}
		}
		
		public System.Data.Linq.Table<tbMainTable01> tbMainTable01s
		{
			get
			{
				return this.GetTable<tbMainTable01>();
			}
		}
		
		public System.Data.Linq.Table<tbMainTable02> tbMainTable02s
		{
			get
			{
				return this.GetTable<tbMainTable02>();
			}
		}
		
		public System.Data.Linq.Table<tbMainTable03> tbMainTable03s
		{
			get
			{
				return this.GetTable<tbMainTable03>();
			}
		}
		
		public System.Data.Linq.Table<tbMainTable04> tbMainTable04s
		{
			get
			{
				return this.GetTable<tbMainTable04>();
			}
		}
		
		public System.Data.Linq.Table<tbMainTable05> tbMainTable05s
		{
			get
			{
				return this.GetTable<tbMainTable05>();
			}
		}
		
		public System.Data.Linq.Table<tbMonthlyBudget> tbMonthlyBudgets
		{
			get
			{
				return this.GetTable<tbMonthlyBudget>();
			}
		}
		
		public System.Data.Linq.Table<tbMonthlyExpense> tbMonthlyExpenses
		{
			get
			{
				return this.GetTable<tbMonthlyExpense>();
			}
		}
		
		public System.Data.Linq.Table<tbMonthlySaving> tbMonthlySavings
		{
			get
			{
				return this.GetTable<tbMonthlySaving>();
			}
		}
		
		public System.Data.Linq.Table<tbNote> tbNotes
		{
			get
			{
				return this.GetTable<tbNote>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbActionLog")]
	public partial class tbActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _logAction;
		
		private System.Nullable<int> _logUserID;
		
		private System.Nullable<System.DateTime> _logDate;
		
		private string _logMessage;
		
		private string _logIP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnlogActionChanging(int value);
    partial void OnlogActionChanged();
    partial void OnlogUserIDChanging(System.Nullable<int> value);
    partial void OnlogUserIDChanged();
    partial void OnlogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlogDateChanged();
    partial void OnlogMessageChanging(string value);
    partial void OnlogMessageChanged();
    partial void OnlogIPChanging(string value);
    partial void OnlogIPChanged();
    #endregion
		
		public tbActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logAction", DbType="Int NOT NULL")]
		public int logAction
		{
			get
			{
				return this._logAction;
			}
			set
			{
				if ((this._logAction != value))
				{
					this.OnlogActionChanging(value);
					this.SendPropertyChanging();
					this._logAction = value;
					this.SendPropertyChanged("logAction");
					this.OnlogActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logUserID", DbType="Int")]
		public System.Nullable<int> logUserID
		{
			get
			{
				return this._logUserID;
			}
			set
			{
				if ((this._logUserID != value))
				{
					this.OnlogUserIDChanging(value);
					this.SendPropertyChanging();
					this._logUserID = value;
					this.SendPropertyChanged("logUserID");
					this.OnlogUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> logDate
		{
			get
			{
				return this._logDate;
			}
			set
			{
				if ((this._logDate != value))
				{
					this.OnlogDateChanging(value);
					this.SendPropertyChanging();
					this._logDate = value;
					this.SendPropertyChanged("logDate");
					this.OnlogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logMessage", DbType="NVarChar(200)")]
		public string logMessage
		{
			get
			{
				return this._logMessage;
			}
			set
			{
				if ((this._logMessage != value))
				{
					this.OnlogMessageChanging(value);
					this.SendPropertyChanging();
					this._logMessage = value;
					this.SendPropertyChanged("logMessage");
					this.OnlogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logIP", DbType="NVarChar(50)")]
		public string logIP
		{
			get
			{
				return this._logIP;
			}
			set
			{
				if ((this._logIP != value))
				{
					this.OnlogIPChanging(value);
					this.SendPropertyChanging();
					this._logIP = value;
					this.SendPropertyChanged("logIP");
					this.OnlogIPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUsers")]
	public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _password;
		
		private int _userID;
		
		private string _email;
		
		private string _currency;
		
		private System.Nullable<int> _language;
		
		private System.Nullable<bool> _hassetlang;
		
		private System.Nullable<System.DateTime> _registrationdate;
		
		private System.Nullable<int> _attachmentsize;
		
		private System.Nullable<System.DateTime> _lastlogintime;
		
		private string _lastipaddress;
		
		private string _useragent;
		
		private EntitySet<tbCustomPageControl> _tbCustomPageControls;
		
		private EntitySet<tbNote> _tbNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    partial void OnlanguageChanging(System.Nullable<int> value);
    partial void OnlanguageChanged();
    partial void OnhassetlangChanging(System.Nullable<bool> value);
    partial void OnhassetlangChanged();
    partial void OnregistrationdateChanging(System.Nullable<System.DateTime> value);
    partial void OnregistrationdateChanged();
    partial void OnattachmentsizeChanging(System.Nullable<int> value);
    partial void OnattachmentsizeChanged();
    partial void OnlastlogintimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastlogintimeChanged();
    partial void OnlastipaddressChanging(string value);
    partial void OnlastipaddressChanged();
    partial void OnuseragentChanging(string value);
    partial void OnuseragentChanged();
    #endregion
		
		public tbUser()
		{
			this._tbCustomPageControls = new EntitySet<tbCustomPageControl>(new Action<tbCustomPageControl>(this.attach_tbCustomPageControls), new Action<tbCustomPageControl>(this.detach_tbCustomPageControls));
			this._tbNotes = new EntitySet<tbNote>(new Action<tbNote>(this.attach_tbNotes), new Action<tbNote>(this.detach_tbNotes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="NVarChar(4)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="Int")]
		public System.Nullable<int> language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hassetlang", DbType="Bit")]
		public System.Nullable<bool> hassetlang
		{
			get
			{
				return this._hassetlang;
			}
			set
			{
				if ((this._hassetlang != value))
				{
					this.OnhassetlangChanging(value);
					this.SendPropertyChanging();
					this._hassetlang = value;
					this.SendPropertyChanged("hassetlang");
					this.OnhassetlangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> registrationdate
		{
			get
			{
				return this._registrationdate;
			}
			set
			{
				if ((this._registrationdate != value))
				{
					this.OnregistrationdateChanging(value);
					this.SendPropertyChanging();
					this._registrationdate = value;
					this.SendPropertyChanged("registrationdate");
					this.OnregistrationdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachmentsize", DbType="Int")]
		public System.Nullable<int> attachmentsize
		{
			get
			{
				return this._attachmentsize;
			}
			set
			{
				if ((this._attachmentsize != value))
				{
					this.OnattachmentsizeChanging(value);
					this.SendPropertyChanging();
					this._attachmentsize = value;
					this.SendPropertyChanged("attachmentsize");
					this.OnattachmentsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastlogintime", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastlogintime
		{
			get
			{
				return this._lastlogintime;
			}
			set
			{
				if ((this._lastlogintime != value))
				{
					this.OnlastlogintimeChanging(value);
					this.SendPropertyChanging();
					this._lastlogintime = value;
					this.SendPropertyChanged("lastlogintime");
					this.OnlastlogintimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastipaddress", DbType="NVarChar(50)")]
		public string lastipaddress
		{
			get
			{
				return this._lastipaddress;
			}
			set
			{
				if ((this._lastipaddress != value))
				{
					this.OnlastipaddressChanging(value);
					this.SendPropertyChanging();
					this._lastipaddress = value;
					this.SendPropertyChanged("lastipaddress");
					this.OnlastipaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useragent", DbType="NVarChar(500)")]
		public string useragent
		{
			get
			{
				return this._useragent;
			}
			set
			{
				if ((this._useragent != value))
				{
					this.OnuseragentChanging(value);
					this.SendPropertyChanging();
					this._useragent = value;
					this.SendPropertyChanged("useragent");
					this.OnuseragentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbCustomPageControl", Storage="_tbCustomPageControls", ThisKey="userID", OtherKey="UserID")]
		public EntitySet<tbCustomPageControl> tbCustomPageControls
		{
			get
			{
				return this._tbCustomPageControls;
			}
			set
			{
				this._tbCustomPageControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbNote", Storage="_tbNotes", ThisKey="userID", OtherKey="UserID")]
		public EntitySet<tbNote> tbNotes
		{
			get
			{
				return this._tbNotes;
			}
			set
			{
				this._tbNotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbCustomPageControls(tbCustomPageControl entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbCustomPageControls(tbCustomPageControl entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
		
		private void attach_tbNotes(tbNote entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbNotes(tbNote entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbControlTypes")]
	public partial class tbControlType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ControlType;
		
		private string _ControlTypeText;
		
		private EntitySet<tbCustomPageControl> _tbCustomPageControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnControlTypeChanging(string value);
    partial void OnControlTypeChanged();
    partial void OnControlTypeTextChanging(string value);
    partial void OnControlTypeTextChanged();
    #endregion
		
		public tbControlType()
		{
			this._tbCustomPageControls = new EntitySet<tbCustomPageControl>(new Action<tbCustomPageControl>(this.attach_tbCustomPageControls), new Action<tbCustomPageControl>(this.detach_tbCustomPageControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlType", DbType="NChar(100)")]
		public string ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this.OnControlTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlType = value;
					this.SendPropertyChanged("ControlType");
					this.OnControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeText", DbType="NChar(100)")]
		public string ControlTypeText
		{
			get
			{
				return this._ControlTypeText;
			}
			set
			{
				if ((this._ControlTypeText != value))
				{
					this.OnControlTypeTextChanging(value);
					this.SendPropertyChanging();
					this._ControlTypeText = value;
					this.SendPropertyChanged("ControlTypeText");
					this.OnControlTypeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbControlType_tbCustomPageControl", Storage="_tbCustomPageControls", ThisKey="ID", OtherKey="ControlTypeID")]
		public EntitySet<tbCustomPageControl> tbCustomPageControls
		{
			get
			{
				return this._tbCustomPageControls;
			}
			set
			{
				this._tbCustomPageControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbCustomPageControls(tbCustomPageControl entity)
		{
			this.SendPropertyChanging();
			entity.tbControlType = this;
		}
		
		private void detach_tbCustomPageControls(tbCustomPageControl entity)
		{
			this.SendPropertyChanging();
			entity.tbControlType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbCostCategories")]
	public partial class tbCostCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CostCategoryID;
		
		private string _CostNames;
		
		private int _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCostCategoryIDChanging(System.Nullable<int> value);
    partial void OnCostCategoryIDChanged();
    partial void OnCostNamesChanging(string value);
    partial void OnCostNamesChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    #endregion
		
		public tbCostCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategoryID", DbType="Int")]
		public System.Nullable<int> CostCategoryID
		{
			get
			{
				return this._CostCategoryID;
			}
			set
			{
				if ((this._CostCategoryID != value))
				{
					this.OnCostCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CostCategoryID = value;
					this.SendPropertyChanged("CostCategoryID");
					this.OnCostCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostNames", DbType="NVarChar(50)")]
		public string CostNames
		{
			get
			{
				return this._CostNames;
			}
			set
			{
				if ((this._CostNames != value))
				{
					this.OnCostNamesChanging(value);
					this.SendPropertyChanging();
					this._CostNames = value;
					this.SendPropertyChanged("CostNames");
					this.OnCostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
		public int Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbCustomListItems")]
	public partial class tbCustomListItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ControlID;
		
		private string _ListItemValue;
		
		private string _ListItemText;
		
		private System.Nullable<bool> _Selected;
		
		private EntityRef<tbCustomPageControl> _tbCustomPageControl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnControlIDChanging(System.Nullable<int> value);
    partial void OnControlIDChanged();
    partial void OnListItemValueChanging(string value);
    partial void OnListItemValueChanged();
    partial void OnListItemTextChanging(string value);
    partial void OnListItemTextChanged();
    partial void OnSelectedChanging(System.Nullable<bool> value);
    partial void OnSelectedChanged();
    #endregion
		
		public tbCustomListItem()
		{
			this._tbCustomPageControl = default(EntityRef<tbCustomPageControl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="Int")]
		public System.Nullable<int> ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					if (this._tbCustomPageControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListItemValue", DbType="NVarChar(100)")]
		public string ListItemValue
		{
			get
			{
				return this._ListItemValue;
			}
			set
			{
				if ((this._ListItemValue != value))
				{
					this.OnListItemValueChanging(value);
					this.SendPropertyChanging();
					this._ListItemValue = value;
					this.SendPropertyChanged("ListItemValue");
					this.OnListItemValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListItemText", DbType="NVarChar(100)")]
		public string ListItemText
		{
			get
			{
				return this._ListItemText;
			}
			set
			{
				if ((this._ListItemText != value))
				{
					this.OnListItemTextChanging(value);
					this.SendPropertyChanging();
					this._ListItemText = value;
					this.SendPropertyChanged("ListItemText");
					this.OnListItemTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selected", DbType="Bit")]
		public System.Nullable<bool> Selected
		{
			get
			{
				return this._Selected;
			}
			set
			{
				if ((this._Selected != value))
				{
					this.OnSelectedChanging(value);
					this.SendPropertyChanging();
					this._Selected = value;
					this.SendPropertyChanged("Selected");
					this.OnSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbCustomPageControl_tbCustomListItem", Storage="_tbCustomPageControl", ThisKey="ControlID", OtherKey="ID", IsForeignKey=true)]
		public tbCustomPageControl tbCustomPageControl
		{
			get
			{
				return this._tbCustomPageControl.Entity;
			}
			set
			{
				tbCustomPageControl previousValue = this._tbCustomPageControl.Entity;
				if (((previousValue != value) 
							|| (this._tbCustomPageControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbCustomPageControl.Entity = null;
						previousValue.tbCustomListItems.Remove(this);
					}
					this._tbCustomPageControl.Entity = value;
					if ((value != null))
					{
						value.tbCustomListItems.Add(this);
						this._ControlID = value.ID;
					}
					else
					{
						this._ControlID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbCustomPageControl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbCustomPageControls")]
	public partial class tbCustomPageControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private string _ControlID;
		
		private System.Nullable<int> _ControlTypeID;
		
		private string _ControlValue;
		
		private System.Nullable<bool> _Calculable;
		
		private System.Nullable<bool> _Selected;
		
		private string _Label;
		
		private EntitySet<tbCustomListItem> _tbCustomListItems;
		
		private EntityRef<tbControlType> _tbControlType;
		
		private EntityRef<tbUser> _tbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnControlIDChanging(string value);
    partial void OnControlIDChanged();
    partial void OnControlTypeIDChanging(System.Nullable<int> value);
    partial void OnControlTypeIDChanged();
    partial void OnControlValueChanging(string value);
    partial void OnControlValueChanged();
    partial void OnCalculableChanging(System.Nullable<bool> value);
    partial void OnCalculableChanged();
    partial void OnSelectedChanging(System.Nullable<bool> value);
    partial void OnSelectedChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    #endregion
		
		public tbCustomPageControl()
		{
			this._tbCustomListItems = new EntitySet<tbCustomListItem>(new Action<tbCustomListItem>(this.attach_tbCustomListItems), new Action<tbCustomListItem>(this.detach_tbCustomListItems));
			this._tbControlType = default(EntityRef<tbControlType>);
			this._tbUser = default(EntityRef<tbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="NVarChar(100)")]
		public string ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeID", DbType="Int")]
		public System.Nullable<int> ControlTypeID
		{
			get
			{
				return this._ControlTypeID;
			}
			set
			{
				if ((this._ControlTypeID != value))
				{
					if (this._tbControlType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ControlTypeID = value;
					this.SendPropertyChanged("ControlTypeID");
					this.OnControlTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlValue", DbType="NChar(300)")]
		public string ControlValue
		{
			get
			{
				return this._ControlValue;
			}
			set
			{
				if ((this._ControlValue != value))
				{
					this.OnControlValueChanging(value);
					this.SendPropertyChanging();
					this._ControlValue = value;
					this.SendPropertyChanged("ControlValue");
					this.OnControlValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calculable", DbType="Bit")]
		public System.Nullable<bool> Calculable
		{
			get
			{
				return this._Calculable;
			}
			set
			{
				if ((this._Calculable != value))
				{
					this.OnCalculableChanging(value);
					this.SendPropertyChanging();
					this._Calculable = value;
					this.SendPropertyChanged("Calculable");
					this.OnCalculableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selected", DbType="Bit")]
		public System.Nullable<bool> Selected
		{
			get
			{
				return this._Selected;
			}
			set
			{
				if ((this._Selected != value))
				{
					this.OnSelectedChanging(value);
					this.SendPropertyChanging();
					this._Selected = value;
					this.SendPropertyChanged("Selected");
					this.OnSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(100)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbCustomPageControl_tbCustomListItem", Storage="_tbCustomListItems", ThisKey="ID", OtherKey="ControlID")]
		public EntitySet<tbCustomListItem> tbCustomListItems
		{
			get
			{
				return this._tbCustomListItems;
			}
			set
			{
				this._tbCustomListItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbControlType_tbCustomPageControl", Storage="_tbControlType", ThisKey="ControlTypeID", OtherKey="ID", IsForeignKey=true)]
		public tbControlType tbControlType
		{
			get
			{
				return this._tbControlType.Entity;
			}
			set
			{
				tbControlType previousValue = this._tbControlType.Entity;
				if (((previousValue != value) 
							|| (this._tbControlType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbControlType.Entity = null;
						previousValue.tbCustomPageControls.Remove(this);
					}
					this._tbControlType.Entity = value;
					if ((value != null))
					{
						value.tbCustomPageControls.Add(this);
						this._ControlTypeID = value.ID;
					}
					else
					{
						this._ControlTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbControlType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbCustomPageControl", Storage="_tbUser", ThisKey="UserID", OtherKey="userID", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbCustomPageControls.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbCustomPageControls.Add(this);
						this._UserID = value.userID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbCustomListItems(tbCustomListItem entity)
		{
			this.SendPropertyChanging();
			entity.tbCustomPageControl = this;
		}
		
		private void detach_tbCustomListItems(tbCustomListItem entity)
		{
			this.SendPropertyChanging();
			entity.tbCustomPageControl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDetailsTable01")]
	public partial class tbDetailsTable01 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpenditureID;
		
		private string _DetailName;
		
		private string _DetailDescription;
		
		private System.Nullable<decimal> _DetailValue;
		
		private System.Nullable<System.DateTime> _DetailDate;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private bool _IsDeleted;
		
		private EntityRef<tbMainTable01> _tbMainTable01;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpenditureIDChanging(int value);
    partial void OnExpenditureIDChanged();
    partial void OnDetailNameChanging(string value);
    partial void OnDetailNameChanged();
    partial void OnDetailDescriptionChanging(string value);
    partial void OnDetailDescriptionChanged();
    partial void OnDetailValueChanging(System.Nullable<decimal> value);
    partial void OnDetailValueChanged();
    partial void OnDetailDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailDateChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public tbDetailsTable01()
		{
			this._tbMainTable01 = default(EntityRef<tbMainTable01>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenditureID", DbType="Int NOT NULL")]
		public int ExpenditureID
		{
			get
			{
				return this._ExpenditureID;
			}
			set
			{
				if ((this._ExpenditureID != value))
				{
					if (this._tbMainTable01.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenditureIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenditureID = value;
					this.SendPropertyChanged("ExpenditureID");
					this.OnExpenditureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailName", DbType="NVarChar(100)")]
		public string DetailName
		{
			get
			{
				return this._DetailName;
			}
			set
			{
				if ((this._DetailName != value))
				{
					this.OnDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DetailName = value;
					this.SendPropertyChanged("DetailName");
					this.OnDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDescription", DbType="NVarChar(500)")]
		public string DetailDescription
		{
			get
			{
				return this._DetailDescription;
			}
			set
			{
				if ((this._DetailDescription != value))
				{
					this.OnDetailDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailDescription = value;
					this.SendPropertyChanged("DetailDescription");
					this.OnDetailDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailValue", DbType="Money")]
		public System.Nullable<decimal> DetailValue
		{
			get
			{
				return this._DetailValue;
			}
			set
			{
				if ((this._DetailValue != value))
				{
					this.OnDetailValueChanging(value);
					this.SendPropertyChanging();
					this._DetailValue = value;
					this.SendPropertyChanged("DetailValue");
					this.OnDetailValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailDate
		{
			get
			{
				return this._DetailDate;
			}
			set
			{
				if ((this._DetailDate != value))
				{
					this.OnDetailDateChanging(value);
					this.SendPropertyChanging();
					this._DetailDate = value;
					this.SendPropertyChanged("DetailDate");
					this.OnDetailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable01_tbDetailsTable01", Storage="_tbMainTable01", ThisKey="ExpenditureID", OtherKey="ID", IsForeignKey=true)]
		public tbMainTable01 tbMainTable01
		{
			get
			{
				return this._tbMainTable01.Entity;
			}
			set
			{
				tbMainTable01 previousValue = this._tbMainTable01.Entity;
				if (((previousValue != value) 
							|| (this._tbMainTable01.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMainTable01.Entity = null;
						previousValue.tbDetailsTable01s.Remove(this);
					}
					this._tbMainTable01.Entity = value;
					if ((value != null))
					{
						value.tbDetailsTable01s.Add(this);
						this._ExpenditureID = value.ID;
					}
					else
					{
						this._ExpenditureID = default(int);
					}
					this.SendPropertyChanged("tbMainTable01");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDetailsTable02")]
	public partial class tbDetailsTable02 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpenditureID;
		
		private string _DetailName;
		
		private string _DetailDescription;
		
		private System.Nullable<decimal> _DetailValue;
		
		private System.Nullable<System.DateTime> _DetailDate;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private bool _IsDeleted;
		
		private EntityRef<tbMainTable02> _tbMainTable02;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpenditureIDChanging(int value);
    partial void OnExpenditureIDChanged();
    partial void OnDetailNameChanging(string value);
    partial void OnDetailNameChanged();
    partial void OnDetailDescriptionChanging(string value);
    partial void OnDetailDescriptionChanged();
    partial void OnDetailValueChanging(System.Nullable<decimal> value);
    partial void OnDetailValueChanged();
    partial void OnDetailDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailDateChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public tbDetailsTable02()
		{
			this._tbMainTable02 = default(EntityRef<tbMainTable02>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenditureID", DbType="Int NOT NULL")]
		public int ExpenditureID
		{
			get
			{
				return this._ExpenditureID;
			}
			set
			{
				if ((this._ExpenditureID != value))
				{
					if (this._tbMainTable02.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenditureIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenditureID = value;
					this.SendPropertyChanged("ExpenditureID");
					this.OnExpenditureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailName", DbType="NVarChar(100)")]
		public string DetailName
		{
			get
			{
				return this._DetailName;
			}
			set
			{
				if ((this._DetailName != value))
				{
					this.OnDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DetailName = value;
					this.SendPropertyChanged("DetailName");
					this.OnDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDescription", DbType="NVarChar(500)")]
		public string DetailDescription
		{
			get
			{
				return this._DetailDescription;
			}
			set
			{
				if ((this._DetailDescription != value))
				{
					this.OnDetailDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailDescription = value;
					this.SendPropertyChanged("DetailDescription");
					this.OnDetailDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailValue", DbType="Money")]
		public System.Nullable<decimal> DetailValue
		{
			get
			{
				return this._DetailValue;
			}
			set
			{
				if ((this._DetailValue != value))
				{
					this.OnDetailValueChanging(value);
					this.SendPropertyChanging();
					this._DetailValue = value;
					this.SendPropertyChanged("DetailValue");
					this.OnDetailValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailDate
		{
			get
			{
				return this._DetailDate;
			}
			set
			{
				if ((this._DetailDate != value))
				{
					this.OnDetailDateChanging(value);
					this.SendPropertyChanging();
					this._DetailDate = value;
					this.SendPropertyChanged("DetailDate");
					this.OnDetailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable02_tbDetailsTable02", Storage="_tbMainTable02", ThisKey="ExpenditureID", OtherKey="ID", IsForeignKey=true)]
		public tbMainTable02 tbMainTable02
		{
			get
			{
				return this._tbMainTable02.Entity;
			}
			set
			{
				tbMainTable02 previousValue = this._tbMainTable02.Entity;
				if (((previousValue != value) 
							|| (this._tbMainTable02.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMainTable02.Entity = null;
						previousValue.tbDetailsTable02s.Remove(this);
					}
					this._tbMainTable02.Entity = value;
					if ((value != null))
					{
						value.tbDetailsTable02s.Add(this);
						this._ExpenditureID = value.ID;
					}
					else
					{
						this._ExpenditureID = default(int);
					}
					this.SendPropertyChanged("tbMainTable02");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDetailsTable03")]
	public partial class tbDetailsTable03 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpenditureID;
		
		private string _DetailName;
		
		private string _DetailDescription;
		
		private System.Nullable<decimal> _DetailValue;
		
		private System.Nullable<System.DateTime> _DetailDate;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private bool _IsDeleted;
		
		private EntityRef<tbMainTable03> _tbMainTable03;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpenditureIDChanging(int value);
    partial void OnExpenditureIDChanged();
    partial void OnDetailNameChanging(string value);
    partial void OnDetailNameChanged();
    partial void OnDetailDescriptionChanging(string value);
    partial void OnDetailDescriptionChanged();
    partial void OnDetailValueChanging(System.Nullable<decimal> value);
    partial void OnDetailValueChanged();
    partial void OnDetailDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailDateChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public tbDetailsTable03()
		{
			this._tbMainTable03 = default(EntityRef<tbMainTable03>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenditureID", DbType="Int NOT NULL")]
		public int ExpenditureID
		{
			get
			{
				return this._ExpenditureID;
			}
			set
			{
				if ((this._ExpenditureID != value))
				{
					if (this._tbMainTable03.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenditureIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenditureID = value;
					this.SendPropertyChanged("ExpenditureID");
					this.OnExpenditureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailName", DbType="NVarChar(100)")]
		public string DetailName
		{
			get
			{
				return this._DetailName;
			}
			set
			{
				if ((this._DetailName != value))
				{
					this.OnDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DetailName = value;
					this.SendPropertyChanged("DetailName");
					this.OnDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDescription", DbType="NVarChar(500)")]
		public string DetailDescription
		{
			get
			{
				return this._DetailDescription;
			}
			set
			{
				if ((this._DetailDescription != value))
				{
					this.OnDetailDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailDescription = value;
					this.SendPropertyChanged("DetailDescription");
					this.OnDetailDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailValue", DbType="Money")]
		public System.Nullable<decimal> DetailValue
		{
			get
			{
				return this._DetailValue;
			}
			set
			{
				if ((this._DetailValue != value))
				{
					this.OnDetailValueChanging(value);
					this.SendPropertyChanging();
					this._DetailValue = value;
					this.SendPropertyChanged("DetailValue");
					this.OnDetailValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailDate
		{
			get
			{
				return this._DetailDate;
			}
			set
			{
				if ((this._DetailDate != value))
				{
					this.OnDetailDateChanging(value);
					this.SendPropertyChanging();
					this._DetailDate = value;
					this.SendPropertyChanged("DetailDate");
					this.OnDetailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable03_tbDetailsTable03", Storage="_tbMainTable03", ThisKey="ExpenditureID", OtherKey="ID", IsForeignKey=true)]
		public tbMainTable03 tbMainTable03
		{
			get
			{
				return this._tbMainTable03.Entity;
			}
			set
			{
				tbMainTable03 previousValue = this._tbMainTable03.Entity;
				if (((previousValue != value) 
							|| (this._tbMainTable03.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMainTable03.Entity = null;
						previousValue.tbDetailsTable03s.Remove(this);
					}
					this._tbMainTable03.Entity = value;
					if ((value != null))
					{
						value.tbDetailsTable03s.Add(this);
						this._ExpenditureID = value.ID;
					}
					else
					{
						this._ExpenditureID = default(int);
					}
					this.SendPropertyChanged("tbMainTable03");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDetailsTable04")]
	public partial class tbDetailsTable04 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpenditureID;
		
		private string _DetailName;
		
		private string _DetailDescription;
		
		private System.Nullable<decimal> _DetailValue;
		
		private System.Nullable<System.DateTime> _DetailDate;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private bool _IsDeleted;
		
		private EntityRef<tbMainTable04> _tbMainTable04;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpenditureIDChanging(int value);
    partial void OnExpenditureIDChanged();
    partial void OnDetailNameChanging(string value);
    partial void OnDetailNameChanged();
    partial void OnDetailDescriptionChanging(string value);
    partial void OnDetailDescriptionChanged();
    partial void OnDetailValueChanging(System.Nullable<decimal> value);
    partial void OnDetailValueChanged();
    partial void OnDetailDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailDateChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public tbDetailsTable04()
		{
			this._tbMainTable04 = default(EntityRef<tbMainTable04>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenditureID", DbType="Int NOT NULL")]
		public int ExpenditureID
		{
			get
			{
				return this._ExpenditureID;
			}
			set
			{
				if ((this._ExpenditureID != value))
				{
					if (this._tbMainTable04.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenditureIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenditureID = value;
					this.SendPropertyChanged("ExpenditureID");
					this.OnExpenditureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailName", DbType="NVarChar(100)")]
		public string DetailName
		{
			get
			{
				return this._DetailName;
			}
			set
			{
				if ((this._DetailName != value))
				{
					this.OnDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DetailName = value;
					this.SendPropertyChanged("DetailName");
					this.OnDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDescription", DbType="NVarChar(500)")]
		public string DetailDescription
		{
			get
			{
				return this._DetailDescription;
			}
			set
			{
				if ((this._DetailDescription != value))
				{
					this.OnDetailDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailDescription = value;
					this.SendPropertyChanged("DetailDescription");
					this.OnDetailDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailValue", DbType="Money")]
		public System.Nullable<decimal> DetailValue
		{
			get
			{
				return this._DetailValue;
			}
			set
			{
				if ((this._DetailValue != value))
				{
					this.OnDetailValueChanging(value);
					this.SendPropertyChanging();
					this._DetailValue = value;
					this.SendPropertyChanged("DetailValue");
					this.OnDetailValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailDate
		{
			get
			{
				return this._DetailDate;
			}
			set
			{
				if ((this._DetailDate != value))
				{
					this.OnDetailDateChanging(value);
					this.SendPropertyChanging();
					this._DetailDate = value;
					this.SendPropertyChanged("DetailDate");
					this.OnDetailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable04_tbDetailsTable04", Storage="_tbMainTable04", ThisKey="ExpenditureID", OtherKey="ID", IsForeignKey=true)]
		public tbMainTable04 tbMainTable04
		{
			get
			{
				return this._tbMainTable04.Entity;
			}
			set
			{
				tbMainTable04 previousValue = this._tbMainTable04.Entity;
				if (((previousValue != value) 
							|| (this._tbMainTable04.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMainTable04.Entity = null;
						previousValue.tbDetailsTable04s.Remove(this);
					}
					this._tbMainTable04.Entity = value;
					if ((value != null))
					{
						value.tbDetailsTable04s.Add(this);
						this._ExpenditureID = value.ID;
					}
					else
					{
						this._ExpenditureID = default(int);
					}
					this.SendPropertyChanged("tbMainTable04");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDetailsTable05")]
	public partial class tbDetailsTable05 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpenditureID;
		
		private string _DetailName;
		
		private string _DetailDescription;
		
		private System.Nullable<decimal> _DetailValue;
		
		private System.Nullable<System.DateTime> _DetailDate;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private bool _IsDeleted;
		
		private EntityRef<tbMainTable05> _tbMainTable05;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpenditureIDChanging(int value);
    partial void OnExpenditureIDChanged();
    partial void OnDetailNameChanging(string value);
    partial void OnDetailNameChanged();
    partial void OnDetailDescriptionChanging(string value);
    partial void OnDetailDescriptionChanged();
    partial void OnDetailValueChanging(System.Nullable<decimal> value);
    partial void OnDetailValueChanged();
    partial void OnDetailDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailDateChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public tbDetailsTable05()
		{
			this._tbMainTable05 = default(EntityRef<tbMainTable05>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenditureID", DbType="Int NOT NULL")]
		public int ExpenditureID
		{
			get
			{
				return this._ExpenditureID;
			}
			set
			{
				if ((this._ExpenditureID != value))
				{
					if (this._tbMainTable05.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenditureIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenditureID = value;
					this.SendPropertyChanged("ExpenditureID");
					this.OnExpenditureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailName", DbType="NVarChar(100)")]
		public string DetailName
		{
			get
			{
				return this._DetailName;
			}
			set
			{
				if ((this._DetailName != value))
				{
					this.OnDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DetailName = value;
					this.SendPropertyChanged("DetailName");
					this.OnDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDescription", DbType="NVarChar(500)")]
		public string DetailDescription
		{
			get
			{
				return this._DetailDescription;
			}
			set
			{
				if ((this._DetailDescription != value))
				{
					this.OnDetailDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailDescription = value;
					this.SendPropertyChanged("DetailDescription");
					this.OnDetailDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailValue", DbType="Money")]
		public System.Nullable<decimal> DetailValue
		{
			get
			{
				return this._DetailValue;
			}
			set
			{
				if ((this._DetailValue != value))
				{
					this.OnDetailValueChanging(value);
					this.SendPropertyChanging();
					this._DetailValue = value;
					this.SendPropertyChanged("DetailValue");
					this.OnDetailValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailDate
		{
			get
			{
				return this._DetailDate;
			}
			set
			{
				if ((this._DetailDate != value))
				{
					this.OnDetailDateChanging(value);
					this.SendPropertyChanging();
					this._DetailDate = value;
					this.SendPropertyChanged("DetailDate");
					this.OnDetailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable05_tbDetailsTable05", Storage="_tbMainTable05", ThisKey="ExpenditureID", OtherKey="ID", IsForeignKey=true)]
		public tbMainTable05 tbMainTable05
		{
			get
			{
				return this._tbMainTable05.Entity;
			}
			set
			{
				tbMainTable05 previousValue = this._tbMainTable05.Entity;
				if (((previousValue != value) 
							|| (this._tbMainTable05.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbMainTable05.Entity = null;
						previousValue.tbDetailsTable05s.Remove(this);
					}
					this._tbMainTable05.Entity = value;
					if ((value != null))
					{
						value.tbDetailsTable05s.Add(this);
						this._ExpenditureID = value.ID;
					}
					else
					{
						this._ExpenditureID = default(int);
					}
					this.SendPropertyChanged("tbMainTable05");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbIncomes")]
	public partial class tbIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IncomeName;
		
		private System.Nullable<decimal> _IncomeValue;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIncomeNameChanging(string value);
    partial void OnIncomeNameChanged();
    partial void OnIncomeValueChanging(System.Nullable<decimal> value);
    partial void OnIncomeValueChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    #endregion
		
		public tbIncome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeName", DbType="NVarChar(200)")]
		public string IncomeName
		{
			get
			{
				return this._IncomeName;
			}
			set
			{
				if ((this._IncomeName != value))
				{
					this.OnIncomeNameChanging(value);
					this.SendPropertyChanging();
					this._IncomeName = value;
					this.SendPropertyChanged("IncomeName");
					this.OnIncomeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeValue", DbType="Money")]
		public System.Nullable<decimal> IncomeValue
		{
			get
			{
				return this._IncomeValue;
			}
			set
			{
				if ((this._IncomeValue != value))
				{
					this.OnIncomeValueChanging(value);
					this.SendPropertyChanging();
					this._IncomeValue = value;
					this.SendPropertyChanged("IncomeValue");
					this.OnIncomeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbLanguage")]
	public partial class tbLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlID;
		
		private string _ControlTextEN;
		
		private string _ControlTextBG;
		
		private string _ControlTextDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlIDChanging(string value);
    partial void OnControlIDChanged();
    partial void OnControlTextENChanging(string value);
    partial void OnControlTextENChanged();
    partial void OnControlTextBGChanging(string value);
    partial void OnControlTextBGChanged();
    partial void OnControlTextDEChanging(string value);
    partial void OnControlTextDEChanged();
    #endregion
		
		public tbLanguage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTextEN", DbType="NVarChar(500)")]
		public string ControlTextEN
		{
			get
			{
				return this._ControlTextEN;
			}
			set
			{
				if ((this._ControlTextEN != value))
				{
					this.OnControlTextENChanging(value);
					this.SendPropertyChanging();
					this._ControlTextEN = value;
					this.SendPropertyChanged("ControlTextEN");
					this.OnControlTextENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTextBG", DbType="NVarChar(500)")]
		public string ControlTextBG
		{
			get
			{
				return this._ControlTextBG;
			}
			set
			{
				if ((this._ControlTextBG != value))
				{
					this.OnControlTextBGChanging(value);
					this.SendPropertyChanging();
					this._ControlTextBG = value;
					this.SendPropertyChanged("ControlTextBG");
					this.OnControlTextBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTextDE", DbType="NVarChar(500)")]
		public string ControlTextDE
		{
			get
			{
				return this._ControlTextDE;
			}
			set
			{
				if ((this._ControlTextDE != value))
				{
					this.OnControlTextDEChanging(value);
					this.SendPropertyChanging();
					this._ControlTextDE = value;
					this.SendPropertyChanged("ControlTextDE");
					this.OnControlTextDEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbLanguages")]
	public partial class tbLanguage1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Language;
		
		private string _LanguageName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    #endregion
		
		public tbLanguage1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="NVarChar(50)")]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbLog")]
	public partial class tbLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _logMethod;
		
		private string _logExceptionMessage;
		
		private string _logInnerExceptionMessage;
		
		private string _logExceptionSource;
		
		private string _logStackTrace;
		
		private System.Nullable<int> _logUserID;
		
		private System.Nullable<System.DateTime> _logDateTime;
		
		private string _logSqlQuery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnlogMethodChanging(string value);
    partial void OnlogMethodChanged();
    partial void OnlogExceptionMessageChanging(string value);
    partial void OnlogExceptionMessageChanged();
    partial void OnlogInnerExceptionMessageChanging(string value);
    partial void OnlogInnerExceptionMessageChanged();
    partial void OnlogExceptionSourceChanging(string value);
    partial void OnlogExceptionSourceChanged();
    partial void OnlogStackTraceChanging(string value);
    partial void OnlogStackTraceChanged();
    partial void OnlogUserIDChanging(System.Nullable<int> value);
    partial void OnlogUserIDChanged();
    partial void OnlogDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlogDateTimeChanged();
    partial void OnlogSqlQueryChanging(string value);
    partial void OnlogSqlQueryChanged();
    #endregion
		
		public tbLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logMethod", DbType="NVarChar(300)")]
		public string logMethod
		{
			get
			{
				return this._logMethod;
			}
			set
			{
				if ((this._logMethod != value))
				{
					this.OnlogMethodChanging(value);
					this.SendPropertyChanging();
					this._logMethod = value;
					this.SendPropertyChanged("logMethod");
					this.OnlogMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logExceptionMessage", DbType="NVarChar(500)")]
		public string logExceptionMessage
		{
			get
			{
				return this._logExceptionMessage;
			}
			set
			{
				if ((this._logExceptionMessage != value))
				{
					this.OnlogExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._logExceptionMessage = value;
					this.SendPropertyChanged("logExceptionMessage");
					this.OnlogExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logInnerExceptionMessage", DbType="NVarChar(500)")]
		public string logInnerExceptionMessage
		{
			get
			{
				return this._logInnerExceptionMessage;
			}
			set
			{
				if ((this._logInnerExceptionMessage != value))
				{
					this.OnlogInnerExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._logInnerExceptionMessage = value;
					this.SendPropertyChanged("logInnerExceptionMessage");
					this.OnlogInnerExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logExceptionSource", DbType="NVarChar(500)")]
		public string logExceptionSource
		{
			get
			{
				return this._logExceptionSource;
			}
			set
			{
				if ((this._logExceptionSource != value))
				{
					this.OnlogExceptionSourceChanging(value);
					this.SendPropertyChanging();
					this._logExceptionSource = value;
					this.SendPropertyChanged("logExceptionSource");
					this.OnlogExceptionSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logStackTrace", DbType="NVarChar(MAX)")]
		public string logStackTrace
		{
			get
			{
				return this._logStackTrace;
			}
			set
			{
				if ((this._logStackTrace != value))
				{
					this.OnlogStackTraceChanging(value);
					this.SendPropertyChanging();
					this._logStackTrace = value;
					this.SendPropertyChanged("logStackTrace");
					this.OnlogStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logUserID", DbType="Int")]
		public System.Nullable<int> logUserID
		{
			get
			{
				return this._logUserID;
			}
			set
			{
				if ((this._logUserID != value))
				{
					this.OnlogUserIDChanging(value);
					this.SendPropertyChanging();
					this._logUserID = value;
					this.SendPropertyChanged("logUserID");
					this.OnlogUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> logDateTime
		{
			get
			{
				return this._logDateTime;
			}
			set
			{
				if ((this._logDateTime != value))
				{
					this.OnlogDateTimeChanging(value);
					this.SendPropertyChanging();
					this._logDateTime = value;
					this.SendPropertyChanged("logDateTime");
					this.OnlogDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logSqlQuery", DbType="NVarChar(MAX)")]
		public string logSqlQuery
		{
			get
			{
				return this._logSqlQuery;
			}
			set
			{
				if ((this._logSqlQuery != value))
				{
					this.OnlogSqlQueryChanging(value);
					this.SendPropertyChanging();
					this._logSqlQuery = value;
					this.SendPropertyChanged("logSqlQuery");
					this.OnlogSqlQueryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainTable01")]
	public partial class tbMainTable01 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private string _FieldName;
		
		private string _FieldDescription;
		
		private System.Nullable<decimal> _FieldValue;
		
		private System.Nullable<decimal> _FieldExpectedValue;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _DateRecordUpdated;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _HasDetails;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<bool> _Notified;
		
		private System.Nullable<System.DateTime> _NotificationDate;
		
		private bool _Flagged;
		
		private bool _IsDeleted;
		
		private decimal _FieldOldValue;
		
		private EntitySet<tbDetailsTable01> _tbDetailsTable01s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldDescriptionChanging(string value);
    partial void OnFieldDescriptionChanged();
    partial void OnFieldValueChanging(System.Nullable<decimal> value);
    partial void OnFieldValueChanged();
    partial void OnFieldExpectedValueChanging(System.Nullable<decimal> value);
    partial void OnFieldExpectedValueChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnDateRecordUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRecordUpdatedChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnHasDetailsChanging(System.Nullable<bool> value);
    partial void OnHasDetailsChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnNotifiedChanging(System.Nullable<bool> value);
    partial void OnNotifiedChanged();
    partial void OnNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNotificationDateChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFieldOldValueChanging(decimal value);
    partial void OnFieldOldValueChanged();
    #endregion
		
		public tbMainTable01()
		{
			this._tbDetailsTable01s = new EntitySet<tbDetailsTable01>(new Action<tbDetailsTable01>(this.attach_tbDetailsTable01s), new Action<tbDetailsTable01>(this.detach_tbDetailsTable01s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDescription", DbType="NVarChar(500)")]
		public string FieldDescription
		{
			get
			{
				return this._FieldDescription;
			}
			set
			{
				if ((this._FieldDescription != value))
				{
					this.OnFieldDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FieldDescription = value;
					this.SendPropertyChanged("FieldDescription");
					this.OnFieldDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Money")]
		public System.Nullable<decimal> FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldExpectedValue", DbType="Money")]
		public System.Nullable<decimal> FieldExpectedValue
		{
			get
			{
				return this._FieldExpectedValue;
			}
			set
			{
				if ((this._FieldExpectedValue != value))
				{
					this.OnFieldExpectedValueChanging(value);
					this.SendPropertyChanging();
					this._FieldExpectedValue = value;
					this.SendPropertyChanged("FieldExpectedValue");
					this.OnFieldExpectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecordUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRecordUpdated
		{
			get
			{
				return this._DateRecordUpdated;
			}
			set
			{
				if ((this._DateRecordUpdated != value))
				{
					this.OnDateRecordUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateRecordUpdated = value;
					this.SendPropertyChanged("DateRecordUpdated");
					this.OnDateRecordUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDetails", DbType="Bit")]
		public System.Nullable<bool> HasDetails
		{
			get
			{
				return this._HasDetails;
			}
			set
			{
				if ((this._HasDetails != value))
				{
					this.OnHasDetailsChanging(value);
					this.SendPropertyChanging();
					this._HasDetails = value;
					this.SendPropertyChanged("HasDetails");
					this.OnHasDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notified", DbType="Bit")]
		public System.Nullable<bool> Notified
		{
			get
			{
				return this._Notified;
			}
			set
			{
				if ((this._Notified != value))
				{
					this.OnNotifiedChanging(value);
					this.SendPropertyChanging();
					this._Notified = value;
					this.SendPropertyChanged("Notified");
					this.OnNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOldValue", DbType="Money NOT NULL")]
		public decimal FieldOldValue
		{
			get
			{
				return this._FieldOldValue;
			}
			set
			{
				if ((this._FieldOldValue != value))
				{
					this.OnFieldOldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldOldValue = value;
					this.SendPropertyChanged("FieldOldValue");
					this.OnFieldOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable01_tbDetailsTable01", Storage="_tbDetailsTable01s", ThisKey="ID", OtherKey="ExpenditureID")]
		public EntitySet<tbDetailsTable01> tbDetailsTable01s
		{
			get
			{
				return this._tbDetailsTable01s;
			}
			set
			{
				this._tbDetailsTable01s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDetailsTable01s(tbDetailsTable01 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable01 = this;
		}
		
		private void detach_tbDetailsTable01s(tbDetailsTable01 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable01 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainTable02")]
	public partial class tbMainTable02 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private string _FieldName;
		
		private string _FieldDescription;
		
		private System.Nullable<decimal> _FieldValue;
		
		private System.Nullable<decimal> _FieldExpectedValue;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _DateRecordUpdated;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _HasDetails;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<bool> _Notified;
		
		private System.Nullable<System.DateTime> _NotificationDate;
		
		private bool _Flagged;
		
		private bool _IsDeleted;
		
		private decimal _FieldOldValue;
		
		private EntitySet<tbDetailsTable02> _tbDetailsTable02s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldDescriptionChanging(string value);
    partial void OnFieldDescriptionChanged();
    partial void OnFieldValueChanging(System.Nullable<decimal> value);
    partial void OnFieldValueChanged();
    partial void OnFieldExpectedValueChanging(System.Nullable<decimal> value);
    partial void OnFieldExpectedValueChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnDateRecordUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRecordUpdatedChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnHasDetailsChanging(System.Nullable<bool> value);
    partial void OnHasDetailsChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnNotifiedChanging(System.Nullable<bool> value);
    partial void OnNotifiedChanged();
    partial void OnNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNotificationDateChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFieldOldValueChanging(decimal value);
    partial void OnFieldOldValueChanged();
    #endregion
		
		public tbMainTable02()
		{
			this._tbDetailsTable02s = new EntitySet<tbDetailsTable02>(new Action<tbDetailsTable02>(this.attach_tbDetailsTable02s), new Action<tbDetailsTable02>(this.detach_tbDetailsTable02s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDescription", DbType="NVarChar(500)")]
		public string FieldDescription
		{
			get
			{
				return this._FieldDescription;
			}
			set
			{
				if ((this._FieldDescription != value))
				{
					this.OnFieldDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FieldDescription = value;
					this.SendPropertyChanged("FieldDescription");
					this.OnFieldDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Money")]
		public System.Nullable<decimal> FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldExpectedValue", DbType="Money")]
		public System.Nullable<decimal> FieldExpectedValue
		{
			get
			{
				return this._FieldExpectedValue;
			}
			set
			{
				if ((this._FieldExpectedValue != value))
				{
					this.OnFieldExpectedValueChanging(value);
					this.SendPropertyChanging();
					this._FieldExpectedValue = value;
					this.SendPropertyChanged("FieldExpectedValue");
					this.OnFieldExpectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecordUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRecordUpdated
		{
			get
			{
				return this._DateRecordUpdated;
			}
			set
			{
				if ((this._DateRecordUpdated != value))
				{
					this.OnDateRecordUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateRecordUpdated = value;
					this.SendPropertyChanged("DateRecordUpdated");
					this.OnDateRecordUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDetails", DbType="Bit")]
		public System.Nullable<bool> HasDetails
		{
			get
			{
				return this._HasDetails;
			}
			set
			{
				if ((this._HasDetails != value))
				{
					this.OnHasDetailsChanging(value);
					this.SendPropertyChanging();
					this._HasDetails = value;
					this.SendPropertyChanged("HasDetails");
					this.OnHasDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notified", DbType="Bit")]
		public System.Nullable<bool> Notified
		{
			get
			{
				return this._Notified;
			}
			set
			{
				if ((this._Notified != value))
				{
					this.OnNotifiedChanging(value);
					this.SendPropertyChanging();
					this._Notified = value;
					this.SendPropertyChanged("Notified");
					this.OnNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOldValue", DbType="Money NOT NULL")]
		public decimal FieldOldValue
		{
			get
			{
				return this._FieldOldValue;
			}
			set
			{
				if ((this._FieldOldValue != value))
				{
					this.OnFieldOldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldOldValue = value;
					this.SendPropertyChanged("FieldOldValue");
					this.OnFieldOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable02_tbDetailsTable02", Storage="_tbDetailsTable02s", ThisKey="ID", OtherKey="ExpenditureID")]
		public EntitySet<tbDetailsTable02> tbDetailsTable02s
		{
			get
			{
				return this._tbDetailsTable02s;
			}
			set
			{
				this._tbDetailsTable02s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDetailsTable02s(tbDetailsTable02 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable02 = this;
		}
		
		private void detach_tbDetailsTable02s(tbDetailsTable02 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable02 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainTable03")]
	public partial class tbMainTable03 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private string _FieldName;
		
		private string _FieldDescription;
		
		private System.Nullable<decimal> _FieldValue;
		
		private System.Nullable<decimal> _FieldExpectedValue;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _DateRecordUpdated;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _HasDetails;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<bool> _Notified;
		
		private System.Nullable<System.DateTime> _NotificationDate;
		
		private bool _Flagged;
		
		private bool _IsDeleted;
		
		private decimal _FieldOldValue;
		
		private EntitySet<tbDetailsTable03> _tbDetailsTable03s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldDescriptionChanging(string value);
    partial void OnFieldDescriptionChanged();
    partial void OnFieldValueChanging(System.Nullable<decimal> value);
    partial void OnFieldValueChanged();
    partial void OnFieldExpectedValueChanging(System.Nullable<decimal> value);
    partial void OnFieldExpectedValueChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnDateRecordUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRecordUpdatedChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnHasDetailsChanging(System.Nullable<bool> value);
    partial void OnHasDetailsChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnNotifiedChanging(System.Nullable<bool> value);
    partial void OnNotifiedChanged();
    partial void OnNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNotificationDateChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFieldOldValueChanging(decimal value);
    partial void OnFieldOldValueChanged();
    #endregion
		
		public tbMainTable03()
		{
			this._tbDetailsTable03s = new EntitySet<tbDetailsTable03>(new Action<tbDetailsTable03>(this.attach_tbDetailsTable03s), new Action<tbDetailsTable03>(this.detach_tbDetailsTable03s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDescription", DbType="NVarChar(500)")]
		public string FieldDescription
		{
			get
			{
				return this._FieldDescription;
			}
			set
			{
				if ((this._FieldDescription != value))
				{
					this.OnFieldDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FieldDescription = value;
					this.SendPropertyChanged("FieldDescription");
					this.OnFieldDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Money")]
		public System.Nullable<decimal> FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldExpectedValue", DbType="Money")]
		public System.Nullable<decimal> FieldExpectedValue
		{
			get
			{
				return this._FieldExpectedValue;
			}
			set
			{
				if ((this._FieldExpectedValue != value))
				{
					this.OnFieldExpectedValueChanging(value);
					this.SendPropertyChanging();
					this._FieldExpectedValue = value;
					this.SendPropertyChanged("FieldExpectedValue");
					this.OnFieldExpectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecordUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRecordUpdated
		{
			get
			{
				return this._DateRecordUpdated;
			}
			set
			{
				if ((this._DateRecordUpdated != value))
				{
					this.OnDateRecordUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateRecordUpdated = value;
					this.SendPropertyChanged("DateRecordUpdated");
					this.OnDateRecordUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDetails", DbType="Bit")]
		public System.Nullable<bool> HasDetails
		{
			get
			{
				return this._HasDetails;
			}
			set
			{
				if ((this._HasDetails != value))
				{
					this.OnHasDetailsChanging(value);
					this.SendPropertyChanging();
					this._HasDetails = value;
					this.SendPropertyChanged("HasDetails");
					this.OnHasDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notified", DbType="Bit")]
		public System.Nullable<bool> Notified
		{
			get
			{
				return this._Notified;
			}
			set
			{
				if ((this._Notified != value))
				{
					this.OnNotifiedChanging(value);
					this.SendPropertyChanging();
					this._Notified = value;
					this.SendPropertyChanged("Notified");
					this.OnNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOldValue", DbType="Money NOT NULL")]
		public decimal FieldOldValue
		{
			get
			{
				return this._FieldOldValue;
			}
			set
			{
				if ((this._FieldOldValue != value))
				{
					this.OnFieldOldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldOldValue = value;
					this.SendPropertyChanged("FieldOldValue");
					this.OnFieldOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable03_tbDetailsTable03", Storage="_tbDetailsTable03s", ThisKey="ID", OtherKey="ExpenditureID")]
		public EntitySet<tbDetailsTable03> tbDetailsTable03s
		{
			get
			{
				return this._tbDetailsTable03s;
			}
			set
			{
				this._tbDetailsTable03s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDetailsTable03s(tbDetailsTable03 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable03 = this;
		}
		
		private void detach_tbDetailsTable03s(tbDetailsTable03 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable03 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainTable04")]
	public partial class tbMainTable04 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private string _FieldName;
		
		private string _FieldDescription;
		
		private System.Nullable<decimal> _FieldValue;
		
		private System.Nullable<decimal> _FieldExpectedValue;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _DateRecordUpdated;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _HasDetails;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<bool> _Notified;
		
		private System.Nullable<System.DateTime> _NotificationDate;
		
		private bool _Flagged;
		
		private bool _IsDeleted;
		
		private decimal _FieldOldValue;
		
		private EntitySet<tbDetailsTable04> _tbDetailsTable04s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldDescriptionChanging(string value);
    partial void OnFieldDescriptionChanged();
    partial void OnFieldValueChanging(System.Nullable<decimal> value);
    partial void OnFieldValueChanged();
    partial void OnFieldExpectedValueChanging(System.Nullable<decimal> value);
    partial void OnFieldExpectedValueChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnDateRecordUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRecordUpdatedChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnHasDetailsChanging(System.Nullable<bool> value);
    partial void OnHasDetailsChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnNotifiedChanging(System.Nullable<bool> value);
    partial void OnNotifiedChanged();
    partial void OnNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNotificationDateChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFieldOldValueChanging(decimal value);
    partial void OnFieldOldValueChanged();
    #endregion
		
		public tbMainTable04()
		{
			this._tbDetailsTable04s = new EntitySet<tbDetailsTable04>(new Action<tbDetailsTable04>(this.attach_tbDetailsTable04s), new Action<tbDetailsTable04>(this.detach_tbDetailsTable04s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDescription", DbType="NVarChar(500)")]
		public string FieldDescription
		{
			get
			{
				return this._FieldDescription;
			}
			set
			{
				if ((this._FieldDescription != value))
				{
					this.OnFieldDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FieldDescription = value;
					this.SendPropertyChanged("FieldDescription");
					this.OnFieldDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Money")]
		public System.Nullable<decimal> FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldExpectedValue", DbType="Money")]
		public System.Nullable<decimal> FieldExpectedValue
		{
			get
			{
				return this._FieldExpectedValue;
			}
			set
			{
				if ((this._FieldExpectedValue != value))
				{
					this.OnFieldExpectedValueChanging(value);
					this.SendPropertyChanging();
					this._FieldExpectedValue = value;
					this.SendPropertyChanged("FieldExpectedValue");
					this.OnFieldExpectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecordUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRecordUpdated
		{
			get
			{
				return this._DateRecordUpdated;
			}
			set
			{
				if ((this._DateRecordUpdated != value))
				{
					this.OnDateRecordUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateRecordUpdated = value;
					this.SendPropertyChanged("DateRecordUpdated");
					this.OnDateRecordUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDetails", DbType="Bit")]
		public System.Nullable<bool> HasDetails
		{
			get
			{
				return this._HasDetails;
			}
			set
			{
				if ((this._HasDetails != value))
				{
					this.OnHasDetailsChanging(value);
					this.SendPropertyChanging();
					this._HasDetails = value;
					this.SendPropertyChanged("HasDetails");
					this.OnHasDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notified", DbType="Bit")]
		public System.Nullable<bool> Notified
		{
			get
			{
				return this._Notified;
			}
			set
			{
				if ((this._Notified != value))
				{
					this.OnNotifiedChanging(value);
					this.SendPropertyChanging();
					this._Notified = value;
					this.SendPropertyChanged("Notified");
					this.OnNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOldValue", DbType="Money NOT NULL")]
		public decimal FieldOldValue
		{
			get
			{
				return this._FieldOldValue;
			}
			set
			{
				if ((this._FieldOldValue != value))
				{
					this.OnFieldOldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldOldValue = value;
					this.SendPropertyChanged("FieldOldValue");
					this.OnFieldOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable04_tbDetailsTable04", Storage="_tbDetailsTable04s", ThisKey="ID", OtherKey="ExpenditureID")]
		public EntitySet<tbDetailsTable04> tbDetailsTable04s
		{
			get
			{
				return this._tbDetailsTable04s;
			}
			set
			{
				this._tbDetailsTable04s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDetailsTable04s(tbDetailsTable04 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable04 = this;
		}
		
		private void detach_tbDetailsTable04s(tbDetailsTable04 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable04 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainTable05")]
	public partial class tbMainTable05 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private string _FieldName;
		
		private string _FieldDescription;
		
		private System.Nullable<decimal> _FieldValue;
		
		private System.Nullable<decimal> _FieldExpectedValue;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _DateRecordUpdated;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _HasDetails;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttachmentFileType;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<bool> _Notified;
		
		private System.Nullable<System.DateTime> _NotificationDate;
		
		private bool _Flagged;
		
		private bool _IsDeleted;
		
		private decimal _FieldOldValue;
		
		private EntitySet<tbDetailsTable05> _tbDetailsTable05s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldDescriptionChanging(string value);
    partial void OnFieldDescriptionChanged();
    partial void OnFieldValueChanging(System.Nullable<decimal> value);
    partial void OnFieldValueChanged();
    partial void OnFieldExpectedValueChanging(System.Nullable<decimal> value);
    partial void OnFieldExpectedValueChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnDateRecordUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRecordUpdatedChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnHasDetailsChanging(System.Nullable<bool> value);
    partial void OnHasDetailsChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentFileTypeChanging(string value);
    partial void OnAttachmentFileTypeChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnNotifiedChanging(System.Nullable<bool> value);
    partial void OnNotifiedChanged();
    partial void OnNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNotificationDateChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFieldOldValueChanging(decimal value);
    partial void OnFieldOldValueChanged();
    #endregion
		
		public tbMainTable05()
		{
			this._tbDetailsTable05s = new EntitySet<tbDetailsTable05>(new Action<tbDetailsTable05>(this.attach_tbDetailsTable05s), new Action<tbDetailsTable05>(this.detach_tbDetailsTable05s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDescription", DbType="NVarChar(500)")]
		public string FieldDescription
		{
			get
			{
				return this._FieldDescription;
			}
			set
			{
				if ((this._FieldDescription != value))
				{
					this.OnFieldDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FieldDescription = value;
					this.SendPropertyChanged("FieldDescription");
					this.OnFieldDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Money")]
		public System.Nullable<decimal> FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldExpectedValue", DbType="Money")]
		public System.Nullable<decimal> FieldExpectedValue
		{
			get
			{
				return this._FieldExpectedValue;
			}
			set
			{
				if ((this._FieldExpectedValue != value))
				{
					this.OnFieldExpectedValueChanging(value);
					this.SendPropertyChanging();
					this._FieldExpectedValue = value;
					this.SendPropertyChanged("FieldExpectedValue");
					this.OnFieldExpectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRecordUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRecordUpdated
		{
			get
			{
				return this._DateRecordUpdated;
			}
			set
			{
				if ((this._DateRecordUpdated != value))
				{
					this.OnDateRecordUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateRecordUpdated = value;
					this.SendPropertyChanged("DateRecordUpdated");
					this.OnDateRecordUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDetails", DbType="Bit")]
		public System.Nullable<bool> HasDetails
		{
			get
			{
				return this._HasDetails;
			}
			set
			{
				if ((this._HasDetails != value))
				{
					this.OnHasDetailsChanging(value);
					this.SendPropertyChanging();
					this._HasDetails = value;
					this.SendPropertyChanged("HasDetails");
					this.OnHasDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFileType", DbType="NChar(5)")]
		public string AttachmentFileType
		{
			get
			{
				return this._AttachmentFileType;
			}
			set
			{
				if ((this._AttachmentFileType != value))
				{
					this.OnAttachmentFileTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileType = value;
					this.SendPropertyChanged("AttachmentFileType");
					this.OnAttachmentFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notified", DbType="Bit")]
		public System.Nullable<bool> Notified
		{
			get
			{
				return this._Notified;
			}
			set
			{
				if ((this._Notified != value))
				{
					this.OnNotifiedChanging(value);
					this.SendPropertyChanging();
					this._Notified = value;
					this.SendPropertyChanged("Notified");
					this.OnNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOldValue", DbType="Money NOT NULL")]
		public decimal FieldOldValue
		{
			get
			{
				return this._FieldOldValue;
			}
			set
			{
				if ((this._FieldOldValue != value))
				{
					this.OnFieldOldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldOldValue = value;
					this.SendPropertyChanged("FieldOldValue");
					this.OnFieldOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbMainTable05_tbDetailsTable05", Storage="_tbDetailsTable05s", ThisKey="ID", OtherKey="ExpenditureID")]
		public EntitySet<tbDetailsTable05> tbDetailsTable05s
		{
			get
			{
				return this._tbDetailsTable05s;
			}
			set
			{
				this._tbDetailsTable05s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDetailsTable05s(tbDetailsTable05 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable05 = this;
		}
		
		private void detach_tbDetailsTable05s(tbDetailsTable05 entity)
		{
			this.SendPropertyChanging();
			entity.tbMainTable05 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMonthlyBudget")]
	public partial class tbMonthlyBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<decimal> _BudgetJan;
		
		private System.Nullable<decimal> _BudgetFeb;
		
		private System.Nullable<decimal> _BudgetMar;
		
		private System.Nullable<decimal> _BudgetApr;
		
		private System.Nullable<decimal> _BudgetMay;
		
		private System.Nullable<decimal> _BudgetJune;
		
		private System.Nullable<decimal> _BudgetJuly;
		
		private System.Nullable<decimal> _BudgetAug;
		
		private System.Nullable<decimal> _BudgetSept;
		
		private System.Nullable<decimal> _BudgetOct;
		
		private System.Nullable<decimal> _BudgetNov;
		
		private System.Nullable<decimal> _BudgetDec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnBudgetJanChanging(System.Nullable<decimal> value);
    partial void OnBudgetJanChanged();
    partial void OnBudgetFebChanging(System.Nullable<decimal> value);
    partial void OnBudgetFebChanged();
    partial void OnBudgetMarChanging(System.Nullable<decimal> value);
    partial void OnBudgetMarChanged();
    partial void OnBudgetAprChanging(System.Nullable<decimal> value);
    partial void OnBudgetAprChanged();
    partial void OnBudgetMayChanging(System.Nullable<decimal> value);
    partial void OnBudgetMayChanged();
    partial void OnBudgetJuneChanging(System.Nullable<decimal> value);
    partial void OnBudgetJuneChanged();
    partial void OnBudgetJulyChanging(System.Nullable<decimal> value);
    partial void OnBudgetJulyChanged();
    partial void OnBudgetAugChanging(System.Nullable<decimal> value);
    partial void OnBudgetAugChanged();
    partial void OnBudgetSeptChanging(System.Nullable<decimal> value);
    partial void OnBudgetSeptChanged();
    partial void OnBudgetOctChanging(System.Nullable<decimal> value);
    partial void OnBudgetOctChanged();
    partial void OnBudgetNovChanging(System.Nullable<decimal> value);
    partial void OnBudgetNovChanged();
    partial void OnBudgetDecChanging(System.Nullable<decimal> value);
    partial void OnBudgetDecChanged();
    #endregion
		
		public tbMonthlyBudget()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetJan", DbType="Money")]
		public System.Nullable<decimal> BudgetJan
		{
			get
			{
				return this._BudgetJan;
			}
			set
			{
				if ((this._BudgetJan != value))
				{
					this.OnBudgetJanChanging(value);
					this.SendPropertyChanging();
					this._BudgetJan = value;
					this.SendPropertyChanged("BudgetJan");
					this.OnBudgetJanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetFeb", DbType="Money")]
		public System.Nullable<decimal> BudgetFeb
		{
			get
			{
				return this._BudgetFeb;
			}
			set
			{
				if ((this._BudgetFeb != value))
				{
					this.OnBudgetFebChanging(value);
					this.SendPropertyChanging();
					this._BudgetFeb = value;
					this.SendPropertyChanged("BudgetFeb");
					this.OnBudgetFebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetMar", DbType="Money")]
		public System.Nullable<decimal> BudgetMar
		{
			get
			{
				return this._BudgetMar;
			}
			set
			{
				if ((this._BudgetMar != value))
				{
					this.OnBudgetMarChanging(value);
					this.SendPropertyChanging();
					this._BudgetMar = value;
					this.SendPropertyChanged("BudgetMar");
					this.OnBudgetMarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetApr", DbType="Money")]
		public System.Nullable<decimal> BudgetApr
		{
			get
			{
				return this._BudgetApr;
			}
			set
			{
				if ((this._BudgetApr != value))
				{
					this.OnBudgetAprChanging(value);
					this.SendPropertyChanging();
					this._BudgetApr = value;
					this.SendPropertyChanged("BudgetApr");
					this.OnBudgetAprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetMay", DbType="Money")]
		public System.Nullable<decimal> BudgetMay
		{
			get
			{
				return this._BudgetMay;
			}
			set
			{
				if ((this._BudgetMay != value))
				{
					this.OnBudgetMayChanging(value);
					this.SendPropertyChanging();
					this._BudgetMay = value;
					this.SendPropertyChanged("BudgetMay");
					this.OnBudgetMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetJune", DbType="Money")]
		public System.Nullable<decimal> BudgetJune
		{
			get
			{
				return this._BudgetJune;
			}
			set
			{
				if ((this._BudgetJune != value))
				{
					this.OnBudgetJuneChanging(value);
					this.SendPropertyChanging();
					this._BudgetJune = value;
					this.SendPropertyChanged("BudgetJune");
					this.OnBudgetJuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetJuly", DbType="Money")]
		public System.Nullable<decimal> BudgetJuly
		{
			get
			{
				return this._BudgetJuly;
			}
			set
			{
				if ((this._BudgetJuly != value))
				{
					this.OnBudgetJulyChanging(value);
					this.SendPropertyChanging();
					this._BudgetJuly = value;
					this.SendPropertyChanged("BudgetJuly");
					this.OnBudgetJulyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetAug", DbType="Money")]
		public System.Nullable<decimal> BudgetAug
		{
			get
			{
				return this._BudgetAug;
			}
			set
			{
				if ((this._BudgetAug != value))
				{
					this.OnBudgetAugChanging(value);
					this.SendPropertyChanging();
					this._BudgetAug = value;
					this.SendPropertyChanged("BudgetAug");
					this.OnBudgetAugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetSept", DbType="Money")]
		public System.Nullable<decimal> BudgetSept
		{
			get
			{
				return this._BudgetSept;
			}
			set
			{
				if ((this._BudgetSept != value))
				{
					this.OnBudgetSeptChanging(value);
					this.SendPropertyChanging();
					this._BudgetSept = value;
					this.SendPropertyChanged("BudgetSept");
					this.OnBudgetSeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetOct", DbType="Money")]
		public System.Nullable<decimal> BudgetOct
		{
			get
			{
				return this._BudgetOct;
			}
			set
			{
				if ((this._BudgetOct != value))
				{
					this.OnBudgetOctChanging(value);
					this.SendPropertyChanging();
					this._BudgetOct = value;
					this.SendPropertyChanged("BudgetOct");
					this.OnBudgetOctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetNov", DbType="Money")]
		public System.Nullable<decimal> BudgetNov
		{
			get
			{
				return this._BudgetNov;
			}
			set
			{
				if ((this._BudgetNov != value))
				{
					this.OnBudgetNovChanging(value);
					this.SendPropertyChanging();
					this._BudgetNov = value;
					this.SendPropertyChanged("BudgetNov");
					this.OnBudgetNovChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetDec", DbType="Money")]
		public System.Nullable<decimal> BudgetDec
		{
			get
			{
				return this._BudgetDec;
			}
			set
			{
				if ((this._BudgetDec != value))
				{
					this.OnBudgetDecChanging(value);
					this.SendPropertyChanging();
					this._BudgetDec = value;
					this.SendPropertyChanged("BudgetDec");
					this.OnBudgetDecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMonthlyExpenses")]
	public partial class tbMonthlyExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<decimal> _SumJanuary;
		
		private System.Nullable<decimal> _SumFebruary;
		
		private System.Nullable<decimal> _SumMarch;
		
		private System.Nullable<decimal> _SumApril;
		
		private System.Nullable<decimal> _SumMay;
		
		private System.Nullable<decimal> _SumJune;
		
		private System.Nullable<decimal> _SumJuly;
		
		private System.Nullable<decimal> _SumAugust;
		
		private System.Nullable<decimal> _SumSeptember;
		
		private System.Nullable<decimal> _SumOctober;
		
		private System.Nullable<decimal> _SumNovember;
		
		private System.Nullable<decimal> _SumDecember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnSumJanuaryChanging(System.Nullable<decimal> value);
    partial void OnSumJanuaryChanged();
    partial void OnSumFebruaryChanging(System.Nullable<decimal> value);
    partial void OnSumFebruaryChanged();
    partial void OnSumMarchChanging(System.Nullable<decimal> value);
    partial void OnSumMarchChanged();
    partial void OnSumAprilChanging(System.Nullable<decimal> value);
    partial void OnSumAprilChanged();
    partial void OnSumMayChanging(System.Nullable<decimal> value);
    partial void OnSumMayChanged();
    partial void OnSumJuneChanging(System.Nullable<decimal> value);
    partial void OnSumJuneChanged();
    partial void OnSumJulyChanging(System.Nullable<decimal> value);
    partial void OnSumJulyChanged();
    partial void OnSumAugustChanging(System.Nullable<decimal> value);
    partial void OnSumAugustChanged();
    partial void OnSumSeptemberChanging(System.Nullable<decimal> value);
    partial void OnSumSeptemberChanged();
    partial void OnSumOctoberChanging(System.Nullable<decimal> value);
    partial void OnSumOctoberChanged();
    partial void OnSumNovemberChanging(System.Nullable<decimal> value);
    partial void OnSumNovemberChanged();
    partial void OnSumDecemberChanging(System.Nullable<decimal> value);
    partial void OnSumDecemberChanged();
    #endregion
		
		public tbMonthlyExpense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumJanuary", DbType="Money")]
		public System.Nullable<decimal> SumJanuary
		{
			get
			{
				return this._SumJanuary;
			}
			set
			{
				if ((this._SumJanuary != value))
				{
					this.OnSumJanuaryChanging(value);
					this.SendPropertyChanging();
					this._SumJanuary = value;
					this.SendPropertyChanged("SumJanuary");
					this.OnSumJanuaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumFebruary", DbType="Money")]
		public System.Nullable<decimal> SumFebruary
		{
			get
			{
				return this._SumFebruary;
			}
			set
			{
				if ((this._SumFebruary != value))
				{
					this.OnSumFebruaryChanging(value);
					this.SendPropertyChanging();
					this._SumFebruary = value;
					this.SendPropertyChanged("SumFebruary");
					this.OnSumFebruaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumMarch", DbType="Money")]
		public System.Nullable<decimal> SumMarch
		{
			get
			{
				return this._SumMarch;
			}
			set
			{
				if ((this._SumMarch != value))
				{
					this.OnSumMarchChanging(value);
					this.SendPropertyChanging();
					this._SumMarch = value;
					this.SendPropertyChanged("SumMarch");
					this.OnSumMarchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumApril", DbType="Money")]
		public System.Nullable<decimal> SumApril
		{
			get
			{
				return this._SumApril;
			}
			set
			{
				if ((this._SumApril != value))
				{
					this.OnSumAprilChanging(value);
					this.SendPropertyChanging();
					this._SumApril = value;
					this.SendPropertyChanged("SumApril");
					this.OnSumAprilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumMay", DbType="Money")]
		public System.Nullable<decimal> SumMay
		{
			get
			{
				return this._SumMay;
			}
			set
			{
				if ((this._SumMay != value))
				{
					this.OnSumMayChanging(value);
					this.SendPropertyChanging();
					this._SumMay = value;
					this.SendPropertyChanged("SumMay");
					this.OnSumMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumJune", DbType="Money")]
		public System.Nullable<decimal> SumJune
		{
			get
			{
				return this._SumJune;
			}
			set
			{
				if ((this._SumJune != value))
				{
					this.OnSumJuneChanging(value);
					this.SendPropertyChanging();
					this._SumJune = value;
					this.SendPropertyChanged("SumJune");
					this.OnSumJuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumJuly", DbType="Money")]
		public System.Nullable<decimal> SumJuly
		{
			get
			{
				return this._SumJuly;
			}
			set
			{
				if ((this._SumJuly != value))
				{
					this.OnSumJulyChanging(value);
					this.SendPropertyChanging();
					this._SumJuly = value;
					this.SendPropertyChanged("SumJuly");
					this.OnSumJulyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAugust", DbType="Money")]
		public System.Nullable<decimal> SumAugust
		{
			get
			{
				return this._SumAugust;
			}
			set
			{
				if ((this._SumAugust != value))
				{
					this.OnSumAugustChanging(value);
					this.SendPropertyChanging();
					this._SumAugust = value;
					this.SendPropertyChanged("SumAugust");
					this.OnSumAugustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumSeptember", DbType="Money")]
		public System.Nullable<decimal> SumSeptember
		{
			get
			{
				return this._SumSeptember;
			}
			set
			{
				if ((this._SumSeptember != value))
				{
					this.OnSumSeptemberChanging(value);
					this.SendPropertyChanging();
					this._SumSeptember = value;
					this.SendPropertyChanged("SumSeptember");
					this.OnSumSeptemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumOctober", DbType="Money")]
		public System.Nullable<decimal> SumOctober
		{
			get
			{
				return this._SumOctober;
			}
			set
			{
				if ((this._SumOctober != value))
				{
					this.OnSumOctoberChanging(value);
					this.SendPropertyChanging();
					this._SumOctober = value;
					this.SendPropertyChanged("SumOctober");
					this.OnSumOctoberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumNovember", DbType="Money")]
		public System.Nullable<decimal> SumNovember
		{
			get
			{
				return this._SumNovember;
			}
			set
			{
				if ((this._SumNovember != value))
				{
					this.OnSumNovemberChanging(value);
					this.SendPropertyChanging();
					this._SumNovember = value;
					this.SendPropertyChanged("SumNovember");
					this.OnSumNovemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumDecember", DbType="Money")]
		public System.Nullable<decimal> SumDecember
		{
			get
			{
				return this._SumDecember;
			}
			set
			{
				if ((this._SumDecember != value))
				{
					this.OnSumDecemberChanging(value);
					this.SendPropertyChanging();
					this._SumDecember = value;
					this.SendPropertyChanged("SumDecember");
					this.OnSumDecemberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMonthlySavings")]
	public partial class tbMonthlySaving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<decimal> _SavingsJan;
		
		private System.Nullable<decimal> _SavingsFeb;
		
		private System.Nullable<decimal> _SavingsMar;
		
		private System.Nullable<decimal> _SavingsApr;
		
		private System.Nullable<decimal> _SavingsMay;
		
		private System.Nullable<decimal> _SavingsJune;
		
		private System.Nullable<decimal> _SavingsJuly;
		
		private System.Nullable<decimal> _SavingsAug;
		
		private System.Nullable<decimal> _SavingsSept;
		
		private System.Nullable<decimal> _SavingsOct;
		
		private System.Nullable<decimal> _SavingsNov;
		
		private System.Nullable<decimal> _SavingsDec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnSavingsJanChanging(System.Nullable<decimal> value);
    partial void OnSavingsJanChanged();
    partial void OnSavingsFebChanging(System.Nullable<decimal> value);
    partial void OnSavingsFebChanged();
    partial void OnSavingsMarChanging(System.Nullable<decimal> value);
    partial void OnSavingsMarChanged();
    partial void OnSavingsAprChanging(System.Nullable<decimal> value);
    partial void OnSavingsAprChanged();
    partial void OnSavingsMayChanging(System.Nullable<decimal> value);
    partial void OnSavingsMayChanged();
    partial void OnSavingsJuneChanging(System.Nullable<decimal> value);
    partial void OnSavingsJuneChanged();
    partial void OnSavingsJulyChanging(System.Nullable<decimal> value);
    partial void OnSavingsJulyChanged();
    partial void OnSavingsAugChanging(System.Nullable<decimal> value);
    partial void OnSavingsAugChanged();
    partial void OnSavingsSeptChanging(System.Nullable<decimal> value);
    partial void OnSavingsSeptChanged();
    partial void OnSavingsOctChanging(System.Nullable<decimal> value);
    partial void OnSavingsOctChanged();
    partial void OnSavingsNovChanging(System.Nullable<decimal> value);
    partial void OnSavingsNovChanged();
    partial void OnSavingsDecChanging(System.Nullable<decimal> value);
    partial void OnSavingsDecChanged();
    #endregion
		
		public tbMonthlySaving()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsJan", DbType="Money")]
		public System.Nullable<decimal> SavingsJan
		{
			get
			{
				return this._SavingsJan;
			}
			set
			{
				if ((this._SavingsJan != value))
				{
					this.OnSavingsJanChanging(value);
					this.SendPropertyChanging();
					this._SavingsJan = value;
					this.SendPropertyChanged("SavingsJan");
					this.OnSavingsJanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsFeb", DbType="Money")]
		public System.Nullable<decimal> SavingsFeb
		{
			get
			{
				return this._SavingsFeb;
			}
			set
			{
				if ((this._SavingsFeb != value))
				{
					this.OnSavingsFebChanging(value);
					this.SendPropertyChanging();
					this._SavingsFeb = value;
					this.SendPropertyChanged("SavingsFeb");
					this.OnSavingsFebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsMar", DbType="Money")]
		public System.Nullable<decimal> SavingsMar
		{
			get
			{
				return this._SavingsMar;
			}
			set
			{
				if ((this._SavingsMar != value))
				{
					this.OnSavingsMarChanging(value);
					this.SendPropertyChanging();
					this._SavingsMar = value;
					this.SendPropertyChanged("SavingsMar");
					this.OnSavingsMarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsApr", DbType="Money")]
		public System.Nullable<decimal> SavingsApr
		{
			get
			{
				return this._SavingsApr;
			}
			set
			{
				if ((this._SavingsApr != value))
				{
					this.OnSavingsAprChanging(value);
					this.SendPropertyChanging();
					this._SavingsApr = value;
					this.SendPropertyChanged("SavingsApr");
					this.OnSavingsAprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsMay", DbType="Money")]
		public System.Nullable<decimal> SavingsMay
		{
			get
			{
				return this._SavingsMay;
			}
			set
			{
				if ((this._SavingsMay != value))
				{
					this.OnSavingsMayChanging(value);
					this.SendPropertyChanging();
					this._SavingsMay = value;
					this.SendPropertyChanged("SavingsMay");
					this.OnSavingsMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsJune", DbType="Money")]
		public System.Nullable<decimal> SavingsJune
		{
			get
			{
				return this._SavingsJune;
			}
			set
			{
				if ((this._SavingsJune != value))
				{
					this.OnSavingsJuneChanging(value);
					this.SendPropertyChanging();
					this._SavingsJune = value;
					this.SendPropertyChanged("SavingsJune");
					this.OnSavingsJuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsJuly", DbType="Money")]
		public System.Nullable<decimal> SavingsJuly
		{
			get
			{
				return this._SavingsJuly;
			}
			set
			{
				if ((this._SavingsJuly != value))
				{
					this.OnSavingsJulyChanging(value);
					this.SendPropertyChanging();
					this._SavingsJuly = value;
					this.SendPropertyChanged("SavingsJuly");
					this.OnSavingsJulyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsAug", DbType="Money")]
		public System.Nullable<decimal> SavingsAug
		{
			get
			{
				return this._SavingsAug;
			}
			set
			{
				if ((this._SavingsAug != value))
				{
					this.OnSavingsAugChanging(value);
					this.SendPropertyChanging();
					this._SavingsAug = value;
					this.SendPropertyChanged("SavingsAug");
					this.OnSavingsAugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsSept", DbType="Money")]
		public System.Nullable<decimal> SavingsSept
		{
			get
			{
				return this._SavingsSept;
			}
			set
			{
				if ((this._SavingsSept != value))
				{
					this.OnSavingsSeptChanging(value);
					this.SendPropertyChanging();
					this._SavingsSept = value;
					this.SendPropertyChanged("SavingsSept");
					this.OnSavingsSeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsOct", DbType="Money")]
		public System.Nullable<decimal> SavingsOct
		{
			get
			{
				return this._SavingsOct;
			}
			set
			{
				if ((this._SavingsOct != value))
				{
					this.OnSavingsOctChanging(value);
					this.SendPropertyChanging();
					this._SavingsOct = value;
					this.SendPropertyChanged("SavingsOct");
					this.OnSavingsOctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsNov", DbType="Money")]
		public System.Nullable<decimal> SavingsNov
		{
			get
			{
				return this._SavingsNov;
			}
			set
			{
				if ((this._SavingsNov != value))
				{
					this.OnSavingsNovChanging(value);
					this.SendPropertyChanging();
					this._SavingsNov = value;
					this.SendPropertyChanged("SavingsNov");
					this.OnSavingsNovChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsDec", DbType="Money")]
		public System.Nullable<decimal> SavingsDec
		{
			get
			{
				return this._SavingsDec;
			}
			set
			{
				if ((this._SavingsDec != value))
				{
					this.OnSavingsDecChanging(value);
					this.SendPropertyChanging();
					this._SavingsDec = value;
					this.SendPropertyChanged("SavingsDec");
					this.OnSavingsDecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbNotes")]
	public partial class tbNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<tbUser> _tbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public tbNote()
		{
			this._tbUser = default(EntityRef<tbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbNote", Storage="_tbUser", ThisKey="UserID", OtherKey="userID", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbNotes.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbNotes.Add(this);
						this._UserID = value.userID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
